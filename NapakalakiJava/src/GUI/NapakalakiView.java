/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.CombatResult;
import NapakalakiGame.Napakalaki;

/**
 *
 * @author jomabose & danibolanos
 */
public class NapakalakiView extends javax.swing.JFrame {

    /**
     * Creates new form NapakalakiView
     */
    Napakalaki napakalakiModel;
    public NapakalakiView() {
        initComponents();
    }
    
    public void setNapakalaki(Napakalaki napa){
        napakalakiModel = napa;
        this.monsterView2.setMonster(napakalakiModel.getCurrentMonster());
        this.playerView2.setPlayer(napakalakiModel.getCurrentPlayer());
        playerView2.setNapakalaki(napakalakiModel);
        monsterView2.setVisible(false);
        nextTurn.setEnabled(false);
        combat.setEnabled(false);
        playerView2.setDescartarButtons(false);
        repaint();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerView2 = new GUI.PlayerView();
        monsterView2 = new GUI.MonsterView();
        meet = new javax.swing.JButton();
        nextTurn = new javax.swing.JButton();
        combat = new javax.swing.JButton();
        jOptionPane2 = new javax.swing.JOptionPane();
        jOptionPane1 = new javax.swing.JOptionPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(playerView2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        getContentPane().add(monsterView2, new org.netbeans.lib.awtextra.AbsoluteConstraints(704, 15, -1, -1));

        meet.setText("Conocer al Monstruo");
        meet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetActionPerformed(evt);
            }
        });
        getContentPane().add(meet, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, -1, -1));

        nextTurn.setText("Siguiente Turno");
        nextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnActionPerformed(evt);
            }
        });
        getContentPane().add(nextTurn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 400, -1, -1));

        combat.setText("Combatir");
        combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatActionPerformed(evt);
            }
        });
        getContentPane().add(combat, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 350, -1, -1));
        getContentPane().add(jOptionPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 110, 40, 30));
        getContentPane().add(jOptionPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetActionPerformed
        // TODO add your handling code here:
        monsterView2.setVisible(true);
        playerView2.setEnableButtons(false);
        combat.setEnabled(true);
    }//GEN-LAST:event_meetActionPerformed

    private void nextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnActionPerformed
        // TODO add your handling code here:
        if(napakalakiModel.nextTurn()){
            nextTurn.setEnabled(false);
            monsterView2.setVisible(false);
            meet.setEnabled(true);
            playerView2.setDescartarButtons(false);
        }
        else
            jOptionPane2.showMessageDialog(null, "No cumples las condiciones para pasar de turno."
            + "\nO bien tienes m√°s de 4 tesoros ocultos."
            + "\nO bien te queda mal rollo por cumplir.", "ADVERTENCIA", jOptionPane2.WARNING_MESSAGE);
        this.playerView2.setPlayer(napakalakiModel.getCurrentPlayer());
        this.monsterView2.setMonster(napakalakiModel.getCurrentMonster());
        combat.setEnabled(false);
        repaint();
        revalidate();
    }//GEN-LAST:event_nextTurnActionPerformed

    private void combatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatActionPerformed
        // TODO add your handling code here:
        CombatResult resultado = napakalakiModel.developCombat();
        String derrota = "HAS PERDIDO EL COMBATE";
        String victoria = "HAS GANADO EL COMBATE";
        String sectario = " Y TE CONVIERTES EN SECTARIO";
        String ganador = " HAS GANADO LA PARTIDA";
        
        if (resultado==CombatResult.LOSE)
            jOptionPane2.showMessageDialog(null, derrota, "RESULTADO DEL COMBATE", jOptionPane2.ERROR_MESSAGE);
        if(resultado==CombatResult.LOSEANDCONVERT)
            jOptionPane2.showMessageDialog(null, derrota+sectario, "RESULTADO DEL COMBATE", jOptionPane2.INFORMATION_MESSAGE);
        if(resultado==CombatResult.WIN)
            jOptionPane2.showMessageDialog(null, victoria, "RESULTADO DEL COMBATE", jOptionPane2.QUESTION_MESSAGE); 
        if(napakalakiModel.endOfGame(resultado)){
            jOptionPane1.showMessageDialog(null, napakalakiModel.getCurrentPlayer().getName()+ganador, "RESULTADO DEL COMBATE", jOptionPane2.INFORMATION_MESSAGE);
            System.exit(0);
        }
        
        this.playerView2.setPlayer(napakalakiModel.getCurrentPlayer());
        this.playerView2.setPlayer(napakalakiModel.getCurrentPlayer());
        nextTurn.setEnabled(true);
        playerView2.setEnableButtons(true);
        meet.setEnabled(false);
        combat.setEnabled(false);
        repaint();
        revalidate();
    }//GEN-LAST:event_combatActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showView(){
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combat;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JOptionPane jOptionPane2;
    private javax.swing.JButton meet;
    private GUI.MonsterView monsterView2;
    private javax.swing.JButton nextTurn;
    private GUI.PlayerView playerView2;
    // End of variables declaration//GEN-END:variables
}
